const { src, dest, series, parallel } = require('gulp');
const del = require('delete');
const tap = require('gulp-tap');
const fse = require('fs-extra');

let muiIcons = {};
muiIcons.nameList = 
`/* This file generated by gulp */
module.exports = [`;
muiIcons.contents = '';
let modulePrefix = 'MUIIcons_';

function deleteMuiIconsNames(cb) {
  del('./nameList.js', cb);
}

function loadMuiIcons() {
  return src('./node_modules/@material-ui/icons/*.js')
    .pipe(tap(function(file) {
      if (file.stem !== 'index') {
        muiIcons.nameList += "'" + file.stem + "',";
      }
    }));
}

async function makeNameList() {
  try {
    let contents = muiIcons.nameList + '];';
    await fse.outputFile('./nameList.js', contents);
  } catch (err) {
    console.error(err);
  }
}

function deleteMuiIcons(cb) {
  del(['./src/*.re', './src/*.js'], cb);
}

function loadMuiIconBase() {
  return src('./Icon.re')
    .pipe(tap(function(file) {
      muiIcons.contentsBase = file.contents.toString();
    }));
}

async function makeMuiIcon(iconName) {
  try {
    let contentsBase = muiIcons.contentsBase.replace('Icon', iconName);
    let contents = '/* This file generated by gulp */\n' + contentsBase;
    let basename = `./src/${modulePrefix}${iconName}.re`;
    await fse.outputFile(basename, contents);
  } catch (err) {
    console.error(err);
  }
}

async function makeMuiIcons() {
  const nameList = require('./nameList');
  nameList.forEach(async function(iconName) {
    muiIcons.contents += 'module ' + iconName + ' = ' + modulePrefix + iconName + ';\n';
    await makeMuiIcon(iconName);
  });
}

async function makeMuiIconsParent() {
  try {
    let contents = '/* This file generated by gulp */\n' + muiIcons.contents;
    await fse.outputFile('./src/MUIIcons.re', contents);
  } catch (err) {
    console.error(err);
  }
}

exports.namelist = series(
  deleteMuiIconsNames,
  loadMuiIcons,
  makeNameList
);

exports.icons = series(
  deleteMuiIcons, 
  loadMuiIconBase, 
  makeMuiIcons, 
  makeMuiIconsParent
);